#!/opt/homebrew/bin/bash

# This relies on Bash 4 and above
# Meant to be run from the root of this project folder

declare -A tutorials

tutorials=(
    [wallaroo-101]="wallaroo-101"
    [mlops-api]="development/mlops-api"
    [aws-sagemaker-install]="development/sdk-install-guides/aws-sagemaker-install"
    [azure-ml-sdk-install]="development/sdk-install-guides/azure-ml-sdk-install"
    [databricks-azure-sdk-install]="development/sdk-install-guides/databricks-azure-sdk-install"
    [google-vertex-sdk-install]="development/sdk-install-guides/google-vertex-sdk-install"
    [standard-install]="development/sdk-install-guides/standard-install"
    [wallaroo-inference-server-cv-frcnn]="wallaroo-free-tutorials/wallaroo-inference-server-tutorials/wallaroo-inference-server-cv-frcnn"
    [wallaroo-inference-server-cv-resnet]="wallaroo-free-tutorials/wallaroo-inference-server-tutorials/wallaroo-inference-server-cv-resnet"
    [wallaroo-inference-server-cv-unet]="wallaroo-free-tutorials/wallaroo-inference-server-tutorials/wallaroo-inference-server-cv-unet"
    [wallaroo-inference-server-cv-yolov8]="wallaroo-free-tutorials/wallaroo-inference-server-tutorials/wallaroo-inference-server-cv-yolov8"
    [wallaroo-inference-server-hf-summarizer]="wallaroo-free-tutorials/wallaroo-inference-server-tutorials/wallaroo-inference-server-hf-summarizer"
    [wallaroo-inference-server-llama2]="wallaroo-free-tutorials/wallaroo-inference-server-tutorials/wallaroo-inference-server-llama2"
    [ibm-granite-llms]="wallaroo-llms/llm-deploy/ibm-granite-llms"
    [llm-managed-inference-endpoint-llama-vertex]="wallaroo-llms/llm-deploy/llm-managed-inference-endpoint/llm-managed-inference-endpoint-llama-vertex"
    [llm-managed-inference-endpoint-openai]="wallaroo-llms/llm-deploy/llm-managed-inference-endpoint/llm-managed-inference-endpoint-openai"
    [power10-deploy-llamacpp]="wallaroo-llms/llm-deploy/power10-deploy-llamacpp"
    [llamacpp-with-safeguards]="wallaroo-llms/llm-monitoring/llamacpp-with-safeguards"
    [llm-in-line-monitoring]="wallaroo-llms/llm-monitoring/llm-in-line-monitoring"
    [llm-listener-monitoring]="wallaroo-llms/llm-monitoring/llm-listener-monitoring"
    [autoscale-triggers-llamacpp]="wallaroo-llms/llm-performance-optimizations/autoscale-triggers-llamacpp"
    [continuous-batching-custom-llama]="wallaroo-llms/llm-performance-optimizations/continuous-batching-custom-llama"
    [continuous-batching-native-llama]="wallaroo-llms/llm-performance-optimizations/continuous-batching-native-llama"
    [dynamic-batching-tutorial-llamacpp]="wallaroo-llms/llm-performance-optimizations/dynamic-batching-tutorial-llamacpp"
    [dynamic-batching-tutorial-vllm]="wallaroo-llms/llm-performance-optimizations/dynamic-batching-tutorial-vllm"
    [llama3-8b-instruct-vllm]="wallaroo-llms/llm-performance-optimizations/llama3-8b-instruct-vllm"
    [vector-database-embedding-with-ml-orchestrations]="wallaroo-llms/rag-llms/vector-database-embedding-with-ml-orchestrations"
    [automation-and-connections-tutorial]="wallaroo-model-operations-tutorials/automation/automation-and-connections-tutorial"
    [connection-api-bigquery-tutorial]="wallaroo-model-operations-tutorials/automation/connection-api-bigquery-tutorial"
    [orchestration-api-simple-tutorial]="wallaroo-model-operations-tutorials/automation/orchestration-api-simple-tutorial"
    [orchestration-sdk-bigquery-houseprice-tutorial]="wallaroo-model-operations-tutorials/automation/orchestration-sdk-bigquery-houseprice-tutorial"
    [orchestration-sdk-comprehensive-tutorial]="wallaroo-model-operations-tutorials/automation/orchestration-sdk-comprehensive-tutorial"
    [orchestration-sdk-multiple-pipelines-tutorials]="wallaroo-model-operations-tutorials/automation/orchestration-sdk-multiple-pipelines-tutorials"
    [orchestration-sdk-run-continuously-tutorial]="wallaroo-model-operations-tutorials/automation/orchestration-sdk-run-continuously-tutorial"
    [wallaroo-model-upload-deploy-byop-cv-tutorial]="wallaroo-model-operations-tutorials/deploy/by-framework/BYOP/wallaroo-model-upload-deploy-byop-cv-tutorial"
    [hf-clip-vit-base]="wallaroo-model-operations-tutorials/deploy/by-framework/hugging-face/hf-clip-vit-base"
    [hugging-face-upload-tutorials]="wallaroo-model-operations-tutorials/deploy/by-framework/hugging-face/hugging-face-upload-tutorials"
    [keras]="wallaroo-model-operations-tutorials/deploy/by-framework/keras"
    [mlflow]="wallaroo-model-operations-tutorials/deploy/by-framework/mlflow"
    [model-registry-service]="wallaroo-model-operations-tutorials/deploy/by-framework/model-registry-service"
    [demand-curve]="wallaroo-model-operations-tutorials/deploy/by-framework/onnx/demand-curve"
    [imdb]="wallaroo-model-operations-tutorials/deploy/by-framework/onnx/imdb"
    [onnx-multi-input-demo]="wallaroo-model-operations-tutorials/deploy/by-framework/onnx/onnx-multi-input-demo"
    [python-models]="wallaroo-model-operations-tutorials/deploy/by-framework/python-models"
    [pytorch]="wallaroo-model-operations-tutorials/deploy/by-framework/pytorch"
    [sklearn]="wallaroo-model-operations-tutorials/deploy/by-framework/sklearn"
    [tensorflow]="wallaroo-model-operations-tutorials/deploy/by-framework/tensorflow"
    [xgboost]="wallaroo-model-operations-tutorials/deploy/by-framework/xgboost"
    [automatic-speech-detection]="wallaroo-model-operations-tutorials/deploy/by-use-case/automatic-speech-detection"
    [computer-vision]="wallaroo-model-operations-tutorials/deploy/by-use-case/computer-vision"
    [computer-vision-mitochondria-imaging]="wallaroo-model-operations-tutorials/deploy/by-use-case/computer-vision-mitochondria-imaging"
    [computer-vision-yolov8]="wallaroo-model-operations-tutorials/deploy/by-use-case/computer-vision-yolov8"
    [notebooks-in-prod]="wallaroo-model-operations-tutorials/deploy/by-use-case/notebooks-in-prod"
    [pipeline-multiple-replicas-forecast-tutorial]="wallaroo-model-operations-tutorials/deploy/by-use-case/pipeline-multiple-replicas-forecast-tutorial"
    [sentiment-analysis-hugging-face]="wallaroo-model-operations-tutorials/deploy/by-use-case/sentiment-analysis-hugging-face"
    [async-infer]="wallaroo-model-operations-tutorials/infer/async-infer"
    [infer]="wallaroo-model-operations-tutorials/infer/infer"
    [inference-log-tutorial]="wallaroo-model-operations-tutorials/infer/inference-log-tutorial"
    [parallel-infer-tutorial]="wallaroo-model-operations-tutorials/infer/parallel-infer-tutorial"
    [abtesting]="wallaroo-model-operations-tutorials/management/abtesting"
    [inline-model-update]="wallaroo-model-operations-tutorials/management/inline-model-update"
    [shadow-deploy]="wallaroo-model-operations-tutorials/management/shadow-deploy"
    [wallaroo-tag-management]="wallaroo-model-operations-tutorials/management/wallaroo-tag-management"
    [anomaly-detection-tutorial]="wallaroo-model-operations-tutorials/observability/anomaly-detection-tutorial"
    [model-drift-detection-with-assays]="wallaroo-model-operations-tutorials/observability/model-drift-detection-with-assays"
    [edge-computer-vision-yolov8-deploy]="wallaroo-run-anywhere/inference/deploy/edge-computer-vision-yolov8-deploy"
    [edge-unet-brain-segmentation-deploy]="wallaroo-run-anywhere/inference/deploy/edge-unet-brain-segmentation-deploy"
    [edge-computer-vision-yolov8-publish]="wallaroo-run-anywhere/inference/publish/edge-computer-vision-yolov8-publish"
    [edge-unet-brain-segmentation-publish]="wallaroo-run-anywhere/inference/publish/edge-unet-brain-segmentation-publish"
    [edge-arm-publish-cv-resnet-model]="wallaroo-run-anywhere/inference-on-any-architecture/arm/edge-arm-publish-cv-resnet-model"
    [edge-arm-publish-hf-summarization-model]="wallaroo-run-anywhere/inference-on-any-architecture/arm/edge-arm-publish-hf-summarization-model"
    [edge-arm-publish-linear-regression-houseprice-model]="wallaroo-run-anywhere/inference-on-any-architecture/arm/edge-arm-publish-linear-regression-houseprice-model"
    [wallaroo-arm-byop-vgg16]="wallaroo-run-anywhere/inference-on-any-architecture/arm/wallaroo-arm-byop-vgg16"
    [wallaroo-arm-classification-cybersecurity]="wallaroo-run-anywhere/inference-on-any-architecture/arm/wallaroo-arm-classification-cybersecurity"
    [wallaroo-arm-classification-finserv]="wallaroo-run-anywhere/inference-on-any-architecture/arm/wallaroo-arm-classification-finserv"
    [wallaroo-arm-computer-vision-yolov8]="wallaroo-run-anywhere/inference-on-any-architecture/arm/wallaroo-arm-computer-vision-yolov8"
    [wallaroo-arm-cv-arrow]="wallaroo-run-anywhere/inference-on-any-architecture/arm/wallaroo-arm-cv-arrow"
    [wallaroo-arm-llm-summarization]="wallaroo-run-anywhere/inference-on-any-architecture/arm/wallaroo-arm-llm-summarization"
    [gpu-deployment]="wallaroo-run-anywhere/inference-on-any-architecture/cuda/gpu-deployment"
    [wallaroo-gpu-llm-summarization]="wallaroo-run-anywhere/inference-on-any-architecture/cuda/wallaroo-gpu-llm-summarization"
    [jetson]="wallaroo-run-anywhere/inference-on-any-architecture/jetson"
    [computer-vision-resnet-power10]="wallaroo-run-anywhere/inference-on-any-architecture/power10/computer-vision-resnet-power10"
    [edge-classification-cybersecurity]="wallaroo-run-anywhere/inference-on-any-architecture/x86/edge-classification-cybersecurity"
    [edge-classification-finserv]="wallaroo-run-anywhere/inference-on-any-architecture/x86/edge-classification-finserv"
    [edge-classification-finserv-api]="wallaroo-run-anywhere/inference-on-any-architecture/x86/edge-classification-finserv-api"
    [edge-computer-vision-yolov8]="wallaroo-run-anywhere/inference-on-any-architecture/x86/edge-computer-vision-yolov8"
    [edge-cv-healthcare-images]="wallaroo-run-anywhere/inference-on-any-architecture/x86/edge-cv-healthcare-images"
    [edge-llm-summarization]="wallaroo-run-anywhere/inference-on-any-architecture/x86/edge-llm-summarization"
    [edge-observability-cv]="wallaroo-run-anywhere/inference-on-any-architecture/x86/edge-observability-cv"
    )

currentDirectory=$PWD

# for zip in "${!tutorials[@]}"; 
#     do (cd ${tutorials[$zip]}/..;zip -r $currentDirectory/compress_tutorials/$zip.zip $zip);
# done

for zip in ${!tutorials[@]}; do
    #echo cd ${tutorials[${zip}]}/..;
    zip -r ./compress_tutorials/${zip}.zip ${tutorials[${zip}]};
done
apiVersion: kots.io/v1beta1
kind: License
metadata:
  name: johnhansarick
spec:
  appSlug: wallaroo
  channelID: 27LptZPwZTKCYQO8rLdZvDs9LaS
  channelName: CE
  customerEmail: john.hansarick@wallaroo.ai
  customerName: John Hansarick
  endpoint: https://replicated.app
  entitlements:
    InstallDataSender:
      signature: {}
      title: InstallDataSender
      value: false
      valueType: Boolean
    InstallNifi:
      signature: {}
      title: InstallNifi
      value: false
      valueType: Boolean
    adminEmail:
      signature: {}
      title: adminEmail
      value: john.hansarick@wallaroo.ai
      valueType: String
    apiKey:
      isHidden: true
      signature: {}
      title: API auth token
      value: "242465996695682048"
      valueType: String
    domainPrefix:
      signature: {}
      title: DNS domain prefix
      value: haunted-cookie-1985
      valueType: String
    domainSuffix:
      signature: {}
      title: DNS domain suffix
      value: wallaroo.community
      valueType: String
    expires_at:
      description: License Expiration
      signature: {}
      title: Expiration
      value: ""
      valueType: String
  isKotsInstallEnabled: true
  isNewKotsUiEnabled: true
  isSupportBundleUploadSupported: true
  licenseID: 2WE06ukFKhbRar3MkSJhQDJUtmG
  licenseSequence: 1
  licenseType: community
  signature: eyJsaWNlbnNlRGF0YSI6ImV5SmhjR2xXWlhKemFXOXVJam9pYTI5MGN5NXBieTkyTVdKbGRHRXhJaXdpYTJsdVpDSTZJa3hwWTJWdWMyVWlMQ0p0WlhSaFpHRjBZU0k2ZXlKdVlXMWxJam9pYW05b2JtaGhibk5oY21samF5SjlMQ0p6Y0dWaklqcDdJbXhwWTJWdWMyVkpSQ0k2SWpKWFJUQTJkV3RHUzJoaVVtRnlNMDFyVTBwb1VVUktWWFJ0UnlJc0lteHBZMlZ1YzJWVWVYQmxJam9pWTI5dGJYVnVhWFI1SWl3aVkzVnpkRzl0WlhKT1lXMWxJam9pU205b2JpQklZVzV6WVhKcFkyc2lMQ0pqZFhOMGIyMWxja1Z0WVdsc0lqb2lhbTlvYmk1b1lXNXpZWEpwWTJ0QWQyRnNiR0Z5YjI4dVlXa2lMQ0poY0hCVGJIVm5Jam9pZDJGc2JHRnliMjhpTENKamFHRnVibVZzU1VRaU9pSXlOMHh3ZEZwUWQxcFVTME5aVVU4NGNreGtXblpFY3psTVlWTWlMQ0pqYUdGdWJtVnNUbUZ0WlNJNklrTkZJaXdpYkdsalpXNXpaVk5sY1hWbGJtTmxJam94TENKbGJtUndiMmx1ZENJNkltaDBkSEJ6T2k4dmNtVndiR2xqWVhSbFpDNWhjSEFpTENKbGJuUnBkR3hsYldWdWRITWlPbnNpU1c1emRHRnNiRVJoZEdGVFpXNWtaWElpT25zaWRHbDBiR1VpT2lKSmJuTjBZV3hzUkdGMFlWTmxibVJsY2lJc0luWmhiSFZsSWpwbVlXeHpaU3dpZG1Gc2RXVlVlWEJsSWpvaVFtOXZiR1ZoYmlJc0luTnBaMjVoZEhWeVpTSTZlMzE5TENKSmJuTjBZV3hzVG1sbWFTSTZleUowYVhSc1pTSTZJa2x1YzNSaGJHeE9hV1pwSWl3aWRtRnNkV1VpT21aaGJITmxMQ0oyWVd4MVpWUjVjR1VpT2lKQ2IyOXNaV0Z1SWl3aWMybG5ibUYwZFhKbElqcDdmWDBzSW1Ga2JXbHVSVzFoYVd3aU9uc2lkR2wwYkdVaU9pSmhaRzFwYmtWdFlXbHNJaXdpZG1Gc2RXVWlPaUpxYjJodUxtaGhibk5oY21samEwQjNZV3hzWVhKdmJ5NWhhU0lzSW5aaGJIVmxWSGx3WlNJNklsTjBjbWx1WnlJc0luTnBaMjVoZEhWeVpTSTZlMzE5TENKaGNHbExaWGtpT25zaWRHbDBiR1VpT2lKQlVFa2dZWFYwYUNCMGIydGxiaUlzSW5aaGJIVmxJam9pTWpReU5EWTFPVGsyTmprMU5qZ3lNRFE0SWl3aWRtRnNkV1ZVZVhCbElqb2lVM1J5YVc1bklpd2lhWE5JYVdSa1pXNGlPblJ5ZFdVc0luTnBaMjVoZEhWeVpTSTZlMzE5TENKa2IyMWhhVzVRY21WbWFYZ2lPbnNpZEdsMGJHVWlPaUpFVGxNZ1pHOXRZV2x1SUhCeVpXWnBlQ0lzSW5aaGJIVmxJam9pYUdGMWJuUmxaQzFqYjI5cmFXVXRNVGs0TlNJc0luWmhiSFZsVkhsd1pTSTZJbE4wY21sdVp5SXNJbk5wWjI1aGRIVnlaU0k2ZTMxOUxDSmtiMjFoYVc1VGRXWm1hWGdpT25zaWRHbDBiR1VpT2lKRVRsTWdaRzl0WVdsdUlITjFabVpwZUNJc0luWmhiSFZsSWpvaWQyRnNiR0Z5YjI4dVkyOXRiWFZ1YVhSNUlpd2lkbUZzZFdWVWVYQmxJam9pVTNSeWFXNW5JaXdpYzJsbmJtRjBkWEpsSWpwN2ZYMHNJbVY0Y0dseVpYTmZZWFFpT25zaWRHbDBiR1VpT2lKRmVIQnBjbUYwYVc5dUlpd2laR1Z6WTNKcGNIUnBiMjRpT2lKTWFXTmxibk5sSUVWNGNHbHlZWFJwYjI0aUxDSjJZV3gxWlNJNklpSXNJblpoYkhWbFZIbHdaU0k2SWxOMGNtbHVaeUlzSW5OcFoyNWhkSFZ5WlNJNmUzMTlmU3dpYVhOT1pYZExiM1J6VldsRmJtRmliR1ZrSWpwMGNuVmxMQ0pwYzFOMWNIQnZjblJDZFc1a2JHVlZjR3h2WVdSVGRYQndiM0owWldRaU9uUnlkV1VzSW1selMyOTBjMGx1YzNSaGJHeEZibUZpYkdWa0lqcDBjblZsZlgwPSIsImlubmVyU2lnbmF0dXJlIjoiZXlKc2FXTmxibk5sVTJsbmJtRjBkWEpsSWpvaVJVMDVVbkpSYlZNNVRFdFJibUpuYzFwdlRETXJjSE14V0VaRU1WWXplakJyYkRGVVQxQjNWSGt3YlZKemJXUmFkR3BrVkdGdmNrWmtiRXhYVm1wUWFtTnVLM2hsV2xsdFNVZEtkelZhVVZSRk9EQmtabU1yV0VWdVluRlZOamx5WTFsT01URTNhSE54VjBKNGQzRXdZbTFYU1RjemNqWXdXV0pSYmpsaWQyOXZNMHROVUVwcE5HSjRUWGh6TW1Wak4zTjJWbFkwVm01WVFrOXBNa2RNTDA0eFp6azJUVWt5T1RGVk0xZHlXVUU1UVZoQmNqbDZVa1IyU0hWeEwyMHpMMGQwVFRSSlltZEpXa2g1VGs5SVprcHRNMHRVT1VoUlZYUm1aakZRYlRWQ2FsVnVjRmh3VVd0dFlsbFVkVkZxY2tOalJXdHFRWE0zTDNoRmRVdDNWRFJ6WlU5WE1ITlZOMVZGYm1aTFREZHRlVEJxVlN0dVZqZHBWQ3RQZDJzd2VuaHJPWFpxYkVsV1NERkdlSEpyVldKV0wzbHFlVVJ6WmxCeVZWWklVWE5uUW1kTFRuQjJObXhIZUZaTlpHRlVkR2hzVnpWM1BUMGlMQ0p3ZFdKc2FXTkxaWGtpT2lJdExTMHRMVUpGUjBsT0lGQlZRa3hKUXlCTFJWa3RMUzB0TFZ4dVRVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVFemFIaDNRekZ6Ykdwa1dqVlljVFoyUVVOMWIxeHViek5YT1ZKNVFrVjBkVlE1VmprMlJUQnNkMXBpVkVwVGRrdHRVRWxGTjNsT1dsTXhPVE5ZVjFKeU1uaExRVkZETlhwRk1VNWFUbmRqYkhGSldTOVJWVnh1V1RGclNXc3daMDVTVWpCRVNVOXJNbkJRYlU1RFowZEhTM0ZDU0hScGIwVnhlalZ3WkhWTGFEazRZMjVDUmtselpVMXFaVVkxTmpKTk1IcGxUVzV5VjF4dWRrTkhlR1V4VXk5eWJWQmFXbE5MTlZWQ1lsRm5hRFppTUhKS1IycDZOalEySzNscVluRk5aRFV3TjFnMVVubHVWSEV6UzBoT09IZ3dTWEpxTUVWMEwxeHVhVlYzUXpONGNtOXVhMDlMTkhkTFJuTnVUemRYVFZSUk4zQlpUbHBNYVZBNFpqRXJXV3BRYlVsSmRscGlhVVkwTDFkd1dFRldNbXBvT1d3M2VsSklVRnh1U1RGWU1tbHZXR1JJVlVkWVJpOVZRVmhOVTNsblNYUkRaelJZV2xwNVVXZFlLMHczVjJ4eVMzRlhabmsyVTNCTGNWSjZhRGN6YjIxVFl6Qm9NRTFIZVZ4dWMxRkpSRUZSUVVKY2JpMHRMUzB0UlU1RUlGQlZRa3hKUXlCTFJWa3RMUzB0TFZ4dUlpd2lhMlY1VTJsbmJtRjBkWEpsSWpvaVpYbEtlbUZYWkhWWldGSXhZMjFWYVU5cFNuRmhRemsyWkZNNWQxa3dTakpqYkVwM1lVWm9SMVJzUmtKU01EbEtZMVpWTUZacVFteFJVemt3VEROc2Jsa3pXVFZXVlRWSVlrWktOazVIYzNkaVZFcHdXa2hPVFZKVGMzaFpiR3d3WTBWd1ZGWlhOV3RqZWxwNFQwaE9UV042VG5aak1FNVVVbFpHVEU1Vlp6QlJia0pWVjBkMFRGUXdPWGRaVjBac1dsWnNWR1JHVW05aU1GSkdZbE01YjFsWGJIWlZNSGhTVlhwS05VOUdjSFpUYTFFd1QwZE9kbVJyYTNaT01IZHlVMnRPTkZKVlduWlRTRXBWWVcxYWRGUnVRbkZOUld4RlUxaG9UVTF0VmpWWlZHeHFWVzV3Y1ZGV2JIbE9ibkJVVWtjNWJsSXhSbmxoTVU1RFRVZDBTMlZHYUdwbFJrVjJVMjFLTUdJeVJrcFVibTh3VTBVMWQySldaelZXVnpsSVRVVm9SVTVJV2xKalZYaE1aVVpaTTFscmJFTkxNM0IyVGpKNGMxVkdWbEJpU0VaVFkyMDFUMk5JVmtwaGJVbDVZak5PVUZkdFZrTlNSMnhLWVd0T1VHSldRVEZNTTJoTlZVZDRVMVJWY0VSUmJGcE1aVlp2Y2xScVZscFRNSGhOWkdzeGJsWXlSalpTTTBweFVqQm9jRkl5YkdoUk0wNVpVMGQ0V1dJd1NqTmtNbU15VjJ0U05WRldSalZVTTBvd1RrUlZORTB6V2xWa2VrSlZVMjFHZFZZeFdqQlpXRkpGWTJrNVMyUXpWbTVOTTNCeldUQmtjMVJGUlRsUVUwbHpTVzFrYzJJeVNtaGlSWFJzWlZWc2EwbHFiMmxaYlZKc1dsUlZNazVVV1hkWk1scHBUa1JPYWs5WFNYbFBSMHB0VDFSb2JGbFhUbWhhYlVVeVRrUlphV1pSUFQwaWZRPT0ifQ==
